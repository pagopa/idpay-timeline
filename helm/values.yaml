microservice-chart:
  namespace: "idpay"
  nameOverride: ""
  fullnameOverride: ""

  livenessProbe:
    httpGet:
      path: /actuator/health
      port: 8080
    initialDelaySeconds: 120
    failureThreshold: 15
    periodSeconds: 10

  readinessProbe:
    httpGet:
      path: /actuator/health
      port: 8080
    initialDelaySeconds: 120
    failureThreshold: 15
    periodSeconds: 10

  deployment:
    create: true

  service:
    create: true
    type: ClusterIP
    port: 8080

  ingress:
    create: true
    path: /idpaytimeline/(.*)

  serviceAccount:
    create: false
    annotations: {}
    name: ""

  podAnnotations: {}

  podSecurityContext:
    seccompProfile:
      type: RuntimeDefault

  securityContext:
    allowPrivilegeEscalation: false

  envConfig:
    MONGODB_DBNAME: idpay
    APPLICATIONINSIGHTS_ROLE_NAME: "idpaytimeline"
    APPLICATIONINSIGHTS_INSTRUMENTATION_LOGGING_LEVEL: "OFF"
    APPLICATIONINSIGHTS_INSTRUMENTATION_MICROMETER_ENABLED: "false"
    APPLICATIONINSIGHTS_PREVIEW_PROFILER_ENABLED: "false"

  envConfigMapExternals:
    idpay-common:
      TZ: TZ
    idpay-eventhub-00:
      KAFKA_BINDER_BROKER_ENDPOINT_LIST: kafka_broker
      KAFKA_TIMELINE_SASL_MECHANISM: kafka_sasl_mechanism
      KAFKA_TIMELINE_SECURITY_PROTOCOL: kafka_security_protocol
      KAFKA_TOPIC_TIMELINE: idpay_timeline_topic
      KAFKA_GROUP_IN: idpay-timeline-consumer-group

  envSecret:
    MONGODB_URI: mongodb-connection-string
    KAFKA_TIMELINE_OUT_SASL_JAAS_CONFIG: evh-idpay-timeline-idpay-timeline-producer-jaas-config-idpay-00
    KAFKA_TIMELINE_IN_SASL_JAAS_CONFIG: evh-idpay-timeline-idpay-timeline-consumer-jaas-config-idpay-00

  # nodeSelector: {}

  # tolerations: []

  # affinity: {}
