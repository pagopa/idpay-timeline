{
	"info": {
		"_postman_id": "25e988f7-225b-452d-8258-10f94a15a0f5",
		"name": "Timeline",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21721440"
	},
	"item": [
		{
			"name": "Queue Put",
			"item": [
				{
					"name": "GET Timeline - Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET Timeline - Empty [404]\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"GET Timeline - Empty\", function () {\r",
									"    let jsonResponse = pm.response.json()\r",
									"    pm.expect(jsonResponse.code).equals(404);\r",
									"    pm.expect(jsonResponse.message).to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/idpay/timeline/test_initiative_queue/test_user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"idpay",
								"timeline",
								"test_initiative_queue",
								"test_user"
							],
							"query": [
								{
									"key": "page",
									"value": "0",
									"disabled": true
								},
								{
									"key": "operationType",
									"value": "TRANSACTION",
									"disabled": true
								},
								{
									"key": "size",
									"value": "11",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Queue PUT - Ok [PAID_REFUND]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Queue PUT OK - PAID_REFUND\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"operationId\": \"test_refund_operation\",\r\n    \"userId\": \"test_user\",\r\n    \"initiativeId\": \"test_initiative_queue\",\r\n    \"operationType\": \"PAID_REFUND\",\r\n    \"operationDate\": \"2022-07-01T09:41:17.970\",\r\n    \"amount\":\"35.69\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/idpay/timeline/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"idpay",
								"timeline",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Queue PUT - Ok [ADD_IBAN]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Queue PUT OK - ADD_IBAN\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"operationId\": \"test_add_iban_operation\",\r\n    \"userId\": \"test_user\",\r\n    \"initiativeId\": \"test_initiative_queue\",\r\n    \"operationType\": \"ADD_IBAN\",\r\n    \"operationDate\": \"2022-07-01T09:41:17.970\",\r\n    \"channel\": \"APP_IO\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/idpay/timeline/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"idpay",
								"timeline",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Queue PUT - Ok [ONBOARDING]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Queue PUT OK - ONBOARDING\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"operationId\": \"test_onboarding_operation\",\r\n    \"userId\": \"test_user\",\r\n    \"initiativeId\": \"test_initiative_queue\",\r\n    \"operationType\": \"ONBOARDING\",\r\n    \"operationDate\": \"2022-07-01T09:41:17.970\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/idpay/timeline/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"idpay",
								"timeline",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Queue PUT - Ko [MANDATORY FIELD MISSING]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Queue PUT KO - Missing operationType [400]\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Queue PUT KO - Missing operationType - DTO Test\", function () {\r",
									"    let jsonResponse = pm.response.json()\r",
									"    pm.expect(jsonResponse.code).equals(400);\r",
									"    pm.expect(jsonResponse.message).to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"operationId\": \"test_fail_operation\",\r\n    \"userId\": \"test_user\",\r\n    \"initiativeId\": \"test_initiative_queue\",\r\n    \"operationType\": \"\",\r\n    \"operationDate\": \"2022-07-01T09:41:17.970\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/idpay/timeline/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"idpay",
								"timeline",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Timeline - Full",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET Timeline - Full\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"GET Timeline - Full\", function () {\r",
									"    let jsonResponse = pm.response.json()\r",
									"    pm.expect(jsonResponse.operationList).to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/idpay/timeline/test_initiative_queue/test_user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"idpay",
								"timeline",
								"test_initiative_queue",
								"test_user"
							],
							"query": [
								{
									"key": "page",
									"value": "0",
									"disabled": true
								},
								{
									"key": "operationType",
									"value": "TRANSACTION",
									"disabled": true
								},
								{
									"key": "size",
									"value": "11",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Operation Detail",
			"item": [
				{
					"name": "GET Operation- Ok - TRANSACTION",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET Operation- Ok - TRANSACTION [200]\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"GET Operation- Ok - TRANSACTION - DTO Test\", function () {\r",
									"    let jsonResponse = pm.response.json()\r",
									"        pm.expect(jsonResponse.operationId).equals(\"test_operation_detail_transaction\");\r",
									"        pm.expect(jsonResponse.operationDate).equals(\"2022-07-05T11:41:17.970\");\r",
									"        pm.expect(jsonResponse.operationType).equals('TRANSACTION');\r",
									"        pm.expect(jsonResponse.amount).equals(\"500.00\");\r",
									"        pm.expect(jsonResponse.accrued).equals(\"0.00\");\r",
									"        pm.expect(jsonResponse.circuitType).equals(\"00\");\r",
									"        pm.expect(jsonResponse.idTrxIssuer).equals(\"idTrxIssuer\");\r",
									"        pm.expect(jsonResponse.idTrxAcquirer).equals(\"idTrxAcquirer\");\r",
									"        pm.expect(jsonResponse.hpan).equals(\"be74864bf21e4d38571ebb2caf8f56dd8429c43ec965d30e670bd01f9c92d05e\");\r",
									"        pm.expect(jsonResponse.iban).to.be.undefined;\r",
									"        pm.expect(jsonResponse.channel).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/idpay/timeline/test_initiative_detail/test_operation_detail_transaction/test_user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"idpay",
								"timeline",
								"test_initiative_detail",
								"test_operation_detail_transaction",
								"test_user"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Operation- Ok - REVERSAL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET Operation- Ok - REVERSAL [200]\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"GET Operation- Ok - REVERSAL - DTO Test\", function () {\r",
									"    let jsonResponse = pm.response.json()\r",
									"        pm.expect(jsonResponse.operationId).equals(\"test_operation_detail_reversal\");\r",
									"        pm.expect(jsonResponse.operationDate).equals(\"2022-07-01T11:41:17.970\");\r",
									"        pm.expect(jsonResponse.operationType).equals('REVERSAL');\r",
									"        pm.expect(jsonResponse.amount).equals(\"500.00\");\r",
									"        pm.expect(jsonResponse.accrued).equals(\"0.00\");\r",
									"        pm.expect(jsonResponse.circuitType).equals(\"00\");\r",
									"        pm.expect(jsonResponse.idTrxIssuer).equals(\"idTrxIssuer\");\r",
									"        pm.expect(jsonResponse.idTrxAcquirer).equals(\"idTrxAcquirer\");\r",
									"        pm.expect(jsonResponse.hpan).equals(\"be74864bf21e4d38571ebb2caf8f56dd8429c43ec965d30e670bd01f9c92d05e\");\r",
									"        pm.expect(jsonResponse.iban).to.be.undefined;\r",
									"        pm.expect(jsonResponse.channel).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/idpay/timeline/test_initiative_detail/test_operation_detail_reversal/test_user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"idpay",
								"timeline",
								"test_initiative_detail",
								"test_operation_detail_reversal",
								"test_user"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Operation- Ok - ONBOARDING",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET Operation- Ok - ONBOARDING [200]\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"GET Operation- Ok - ONBOARDING - DTO Test\", function () {\r",
									"    let jsonResponse = pm.response.json()\r",
									"        pm.expect(jsonResponse.operationId).equals(\"test_operation_detail_onboarding\");\r",
									"        pm.expect(jsonResponse.operationDate).equals(\"2022-07-10T11:41:17.970\");\r",
									"        pm.expect(jsonResponse.operationType).equals('ONBOARDING');\r",
									"        pm.expect(jsonResponse.amount).to.be.undefined;\r",
									"        pm.expect(jsonResponse.accrued).to.be.undefined;\r",
									"        pm.expect(jsonResponse.circuitType).to.be.undefined;\r",
									"        pm.expect(jsonResponse.idTrxIssuer).to.be.undefined;\r",
									"        pm.expect(jsonResponse.idTrxAcquirer).to.be.undefined;\r",
									"        pm.expect(jsonResponse.hpan).to.be.undefined;\r",
									"        pm.expect(jsonResponse.iban).to.be.undefined;\r",
									"        pm.expect(jsonResponse.channel).to.be.undefined;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/idpay/timeline/test_initiative_detail/test_operation_detail_onboarding/test_user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"idpay",
								"timeline",
								"test_initiative_detail",
								"test_operation_detail_onboarding",
								"test_user"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Operation- Ko [Not Found]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET Operation- Ko [Not Found] [404]\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"GET Operation- Ko [Not Found] - DTO Test\", function () {\r",
									"    let jsonResponse = pm.response.json()\r",
									"    pm.expect(jsonResponse.code).equals(404);\r",
									"    pm.expect(jsonResponse.message).equals(\"Cannot find the requested operation!\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/idpay/timeline/test_initiative_fail/test_operation_fail/test_user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"idpay",
								"timeline",
								"test_initiative_fail",
								"test_operation_fail",
								"test_user"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Timeline",
			"item": [
				{
					"name": "GET Timeline - Ok - Default size, default page, no filter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET Timeline - Ok - Default size, default page, no filter [200]\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"GET Timeline - Ok - Default size, default page, no filter - DTO Test\", function () {\r",
									"    let jsonResponse = pm.response.json()\r",
									"    pm.expect(jsonResponse.lastUpdate).to.be.a('string');\r",
									"    pm.expect(jsonResponse.operationList).to.not.be.empty;\r",
									"    pm.expect(jsonResponse.operationList.length).to.eql(3);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/idpay/timeline/test_initiative/test_user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"idpay",
								"timeline",
								"test_initiative",
								"test_user"
							],
							"query": [
								{
									"key": "page",
									"value": "0",
									"disabled": true
								},
								{
									"key": "operationType",
									"value": "TRANSACTION",
									"disabled": true
								},
								{
									"key": "size",
									"value": "11",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Timeline - Ok - Default size, default page, TRANSACTION filter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET Timeline - Ok - Default size, default page, TRANSACTION filter [200]\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"GET Timeline - Ok - Default size, default page, TRANSACTION filter - DTO Test\", function () {\r",
									"    let jsonResponse = pm.response.json()\r",
									"    pm.expect(jsonResponse.lastUpdate).to.be.a('string');\r",
									"    pm.expect(jsonResponse.operationList).to.not.be.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"GET Timeline - Ok - Default size, default page, TRANSACTION filter - Single operationDTO Test\", function () {\r",
									"    let jsonOperationList = pm.response.json().operationList\r",
									"    jsonOperationList.forEach(function(operation){\r",
									"        pm.expect(operation.operationId).to.be.a('string');\r",
									"        pm.expect(operation.operationDate).to.be.a('string');\r",
									"        pm.expect(operation.operationType).equals('TRANSACTION');\r",
									"        pm.expect(operation.amount).to.be.a('string');\r",
									"        pm.expect(operation.hpan).equals(\"be74864bf21e4d38571ebb2caf8f56dd8429c43ec965d30e670bd01f9c92d05e\");\r",
									"        pm.expect(operation.iban).to.be.undefined;\r",
									"        pm.expect(operation.channel).to.be.undefined;\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/idpay/timeline/test_initiative/test_user?operationType=TRANSACTION",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"idpay",
								"timeline",
								"test_initiative",
								"test_user"
							],
							"query": [
								{
									"key": "page",
									"value": "0",
									"disabled": true
								},
								{
									"key": "operationType",
									"value": "TRANSACTION"
								},
								{
									"key": "size",
									"value": "11",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Timeline - Ok - size = 1, page 1, no filter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET Timeline - Ok - size = 1, page 1, no filter [200]\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"GET Timeline - Ok - size = 1, page 1, no filter - DTO Test\", function () {\r",
									"    let jsonResponse = pm.response.json()\r",
									"    pm.expect(jsonResponse.lastUpdate).to.be.a('string');\r",
									"    pm.expect(jsonResponse.operationList).to.not.be.empty;\r",
									"    pm.expect(jsonResponse.operationList.length).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/idpay/timeline/test_initiative/test_user?page=1&size=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"idpay",
								"timeline",
								"test_initiative",
								"test_user"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "operationType",
									"value": "PAID_REFUND",
									"disabled": true
								},
								{
									"key": "size",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Timeline - Ok - size = 1, default page, no filter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET Timeline - Ok - size = 1, default page, no filter [200]\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"GET Timeline - Ok - size = 1, default page, no filter - DTO Test\", function () {\r",
									"    let jsonResponse = pm.response.json()\r",
									"    pm.expect(jsonResponse.lastUpdate).to.be.a('string');\r",
									"    pm.expect(jsonResponse.operationList).to.not.be.empty;\r",
									"    pm.expect(jsonResponse.operationList.length).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/idpay/timeline/test_initiative/test_user?size=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"idpay",
								"timeline",
								"test_initiative",
								"test_user"
							],
							"query": [
								{
									"key": "page",
									"value": "0",
									"disabled": true
								},
								{
									"key": "operationType",
									"value": "TRANSACTION",
									"disabled": true
								},
								{
									"key": "size",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Timeline - Ok - size = 5, page = 0, no filter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET Timeline - Ok - size = 5, page = 0, no filter [200]\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"GET Timeline - Ok - size = 5, page = 0, no filter - DTO Test\", function () {\r",
									"    let jsonResponse = pm.response.json()\r",
									"    pm.expect(jsonResponse.lastUpdate).to.be.a('string');\r",
									"    pm.expect(jsonResponse.operationList).to.not.be.empty;\r",
									"    pm.expect(jsonResponse.operationList.length).to.be.below(6);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/idpay/timeline/test_initiative/test_user?page=0&size=5",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"idpay",
								"timeline",
								"test_initiative",
								"test_user"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "operationType",
									"value": "TRANSACTION",
									"disabled": true
								},
								{
									"key": "size",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Timeline - Ko - size = 5, page = 1, no filter [Empty List]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET Timeline - Ko - size = 5, page = 1, no filter [Empty List] [404]\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"GET Timeline - Ko - size = 5, page = 1, no filter [Empty List] - DTO Test\", function () {\r",
									"    let jsonResponse = pm.response.json()\r",
									"    pm.expect(jsonResponse.code).equals(404);\r",
									"    pm.expect(jsonResponse.message).equals(\"No operations have been made on this initiative!\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/idpay/timeline/test_initiative/test_user?page=1&size=5",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"idpay",
								"timeline",
								"test_initiative",
								"test_user"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "operationType",
									"value": "TRANSACTION",
									"disabled": true
								},
								{
									"key": "size",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Timeline - Ko - default size, default page, ONBOARDING filter [Empty List]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET Timeline - Ko - default size, default page, ONBOARDING filter [Empty List] [404]\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"GET Timeline - Ko - default size, default page, ONBOARDING filter [Empty List] - DTO Test\", function () {\r",
									"    let jsonResponse = pm.response.json()\r",
									"    pm.expect(jsonResponse.code).equals(404);\r",
									"    pm.expect(jsonResponse.message).equals(\"No operations have been made on this initiative!\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/idpay/timeline/test_initiative/test_user?operationType=ONBOARDING",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"idpay",
								"timeline",
								"test_initiative",
								"test_user"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "operationType",
									"value": "ONBOARDING"
								},
								{
									"key": "size",
									"value": "5",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Timeline - Ko [No Elements]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET Timeline - Ko [No Elements][404]\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"GET Timeline - Ko [No Elements] - DTO Test\", function () {\r",
									"    let jsonResponse = pm.response.json()\r",
									"    pm.expect(jsonResponse.code).equals(404);\r",
									"    pm.expect(jsonResponse.message).equals(\"No operations have been made on this initiative!\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/idpay/timeline/test_initiative_fail/test_user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"idpay",
								"timeline",
								"test_initiative_fail",
								"test_user"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "operationType",
									"value": "TRANSACTION",
									"disabled": true
								},
								{
									"key": "size",
									"value": "5",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Timeline - Ko [SIZE > 10]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GET Timeline KO - size > 10 [400]\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"GET Timeline KO - size > 10 - DTO Test\", function () {\r",
									"    let jsonResponse = pm.response.json()\r",
									"    pm.expect(jsonResponse.code).equals(400);\r",
									"    pm.expect(jsonResponse.message).to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/idpay/timeline/test_initiative/test_user?size=11",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"idpay",
								"timeline",
								"test_initiative",
								"test_user"
							],
							"query": [
								{
									"key": "page",
									"value": "0",
									"disabled": true
								},
								{
									"key": "operationType",
									"value": "TRANSACTION",
									"disabled": true
								},
								{
									"key": "size",
									"value": "11"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}